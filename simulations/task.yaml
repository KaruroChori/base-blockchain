general:
  # stop after 10 simulated seconds
  stop_time: 10s
  # old versions of cURL use a busy loop, so to avoid spinning in this busy
  # loop indefinitely, we add a system call latency to advance the simulated
  # time when running non-blocking system calls
  model_unblocked_syscall_latency: true

network:
  graph:
    # use a built-in network graph containing
    # a single vertex with a bandwidth of 1 Gbit
    type: 1_gbit_switch

hosts:
  # a host with the hostname 'server'
  seeder:
    network_node_id: 0
    ip_addr: 11.0.0.1
    processes:
    - path: /usr/local/bin/node
      args: ../../../../dist/app.js
      start_time: 3s
  # three hosts with hostnames 'client1', 'client2', and 'client3'
  node:
    network_node_id: 0
    quantity: 3
    processes:
    - path: /usr/local/bin/node
      args: ../../../../dist/app.js
      start_time: 5s
  client:
    network_node_id: 0
    processes:
    - path: /usr/bin/curl
      args: seeder/register
      start_time: 5s
